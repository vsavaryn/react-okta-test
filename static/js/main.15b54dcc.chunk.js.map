{"version":3,"sources":["components/Home.jsx","components/OktaSignInWidget.jsx","components/Login.jsx","components/Protected.jsx","config.js","AppWithRouterAccess.jsx","App.js","index.js"],"names":["Home","history","useHistory","login","a","push","button","onClick","to","OktaSignInWidget","config","onSuccess","onError","widgetRef","useRef","useEffect","current","widget","OktaSignIn","showSignInToGetTokens","el","then","catch","remove","ref","Login","useOktaAuth","oktaAuth","authState","isPending","isAuthenticated","pathname","tokens","handleLoginRedirect","err","console","log","Protected","oktaAuthConfig","issuer","clientId","redirectUri","window","location","origin","oktaSignInConfig","baseUrl","authParams","AppWithRouterAccess","OktaAuth","path","exact","component","render","LoginCallback","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"wQA+BeA,EA1BF,WACX,IAAMC,EAAUC,cAKVC,EAAK,uCAAG,sBAAAC,EAAA,+EAAYH,EAAQI,KAAK,WAAzB,2CAAH,qDAILC,EAGJ,wBAAQC,QAASJ,EAAjB,mBAGF,OACE,gCACE,cAAC,IAAD,CAAMK,GAAG,IAAT,kBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,uBACCF,M,iBCJQG,G,MAnBU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACvCC,EAAYC,mBAgBlB,OAfAC,qBAAU,WACR,IAAKF,EAAUG,QAAS,OAAO,EAE/B,IAAMC,EAAS,IAAIC,IAAWR,GAS9B,OAPAO,EACGE,sBAAsB,CACrBC,GAAIP,EAAUG,UAEfK,KAAKV,GACLW,MAAMV,GAEF,kBAAMK,EAAOM,YACnB,CAACb,EAAQC,EAAWC,IAEhB,qBAAKY,IAAKX,MCIJY,EApBD,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAAa,EACIgB,cAAxBC,EADoB,EACpBA,SAAUC,EADU,EACVA,UAUlB,OAAIA,EAAUC,UAAkB,KAEzBD,EAAUE,gBACf,cAAC,IAAD,CAAUtB,GAAI,CAAEuB,SAAU,OAC1B,cAAC,EAAD,CACErB,OAAQA,EACRC,UAdc,SAACqB,GACjBL,EAASM,oBAAoBD,IAc3BpB,QAXY,SAACsB,GACfC,QAAQC,IAAI,mBAAoBF,OCVrBG,EADG,kBAAM,4CCFlBC,EAAiB,CAIrBC,OAAQ,+CACRC,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,mBAGlCC,EAAmB,CACvBC,QAAS,gCACTN,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,kBACtCG,WAAY,IC2BCC,GA/BE,IAAIC,WAASX,GAEF,WACVpC,cAUhB,OAMI,cALF,CAKG,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,IAAIC,OAAO,EAAMC,UAAWpD,IACxC,cAAC,IAAD,CAAakD,KAAK,aAAaE,UAAWf,IAC1C,cAAC,IAAD,CACEa,KAAK,SACLG,OAAQ,kBAAM,cAAC,EAAD,CAAO3C,OAAQmC,OAE/B,cAAC,IAAD,CAAOK,KAAK,kBAAkBE,UAAWE,WCxBlCC,G,MALH,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,QCHJC,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.15b54dcc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useOktaAuth } from \"@okta/okta-react\";\n\nconst Home = () => {\n  const history = useHistory();\n  // const { oktaAuth, authState } = useOktaAuth();\n\n  // if (authState.isPending) return null;\n\n  const login = async () => history.push(\"/login\");\n\n  // const logout = async () => oktaAuth.signOut();\n\n  const button = /*authState.isAuthenticated ? (\n    <button onClick={logout}>Logout</button>\n  ) : */(\n    <button onClick={login}>Login</button>\n  );\n\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <br />\n      <Link to=\"/protected\">Protected</Link>\n      <br />\n      {button}\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useRef } from \"react\";\nimport OktaSignIn from \"@okta/okta-signin-widget\";\nimport \"@okta/okta-signin-widget/dist/css/okta-sign-in.min.css\";\n\nconst OktaSignInWidget = ({ config, onSuccess, onError }) => {\n  const widgetRef = useRef();\n  useEffect(() => {\n    if (!widgetRef.current) return false;\n\n    const widget = new OktaSignIn(config);\n\n    widget\n      .showSignInToGetTokens({\n        el: widgetRef.current,\n      })\n      .then(onSuccess)\n      .catch(onError);\n\n    return () => widget.remove();\n  }, [config, onSuccess, onError]);\n\n  return <div ref={widgetRef} />;\n};\nexport default OktaSignInWidget;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport OktaSignInWidget from './OktaSignInWidget';\nimport { useOktaAuth } from '@okta/okta-react';\n\nconst Login = ({ config }) => {\n  const { oktaAuth, authState } = useOktaAuth();\n\n  const onSuccess = (tokens) => {\n    oktaAuth.handleLoginRedirect(tokens);\n  };\n\n  const onError = (err) => {\n    console.log('error logging in', err);\n  };\n\n  if (authState.isPending) return null;\n\n  return authState.isAuthenticated ?\n    <Redirect to={{ pathname: '/' }}/> :\n    <OktaSignInWidget\n      config={config}\n      onSuccess={onSuccess}\n      onError={onError}/>;\n};\nexport default Login;","import React from \"react\";\n\nconst Protected = () => <h3>Protected</h3>;\nexport default Protected;\n","const oktaAuthConfig = {\n  // Note: If your app is configured to use the Implicit flow\n  // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\n  // you will need to add `pkce: false`\n  issuer: \"https://dev-46947239.okta.com/oauth2/default\",\n  clientId: \"0oag6szs6zMWTYitD5d6\",\n  redirectUri: window.location.origin + \"/login/callback\",\n};\n\nconst oktaSignInConfig = {\n  baseUrl: \"https://dev-46947239.okta.com\",\n  clientId: \"0oag6szs6zMWTYitD5d6\",\n  redirectUri: window.location.origin + \"/login/callback\",\n  authParams: {\n    // If your app is configured to use the Implicit flow\n    // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\n    // you will need to uncomment the below line\n    // pkce: false\n  },\n};\n\nexport { oktaAuthConfig, oktaSignInConfig };\n","import React from \"react\";\nimport { Route, useHistory, Switch } from \"react-router-dom\";\nimport { Security, SecureRoute, LoginCallback } from \"@okta/okta-react\";\nimport { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Protected from \"./components/Protected\";\nimport { oktaAuthConfig, oktaSignInConfig } from \"./config\";\n\nconst oktaAuth = new OktaAuth(oktaAuthConfig);\n\nconst AppWithRouterAccess = () => {\n  const history = useHistory();\n\n  const customAuthHandler = () => {\n    history.push(\"/login\");\n  };\n\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\n    history.replace(toRelativeUrl(originalUri, window.location.origin));\n  };\n\n  return (\n    // <Security\n    //   oktaAuth={oktaAuth}\n    //   onAuthRequired={customAuthHandler}\n    //   restoreOriginalUri={restoreOriginalUri}\n    // >\n      <Switch>\n        <Route path=\"/\" exact={true} component={Home} />\n        <SecureRoute path=\"/protected\" component={Protected} />\n        <Route\n          path=\"/login\"\n          render={() => <Login config={oktaSignInConfig} />}\n        />\n        <Route path=\"/login/callback\" component={LoginCallback} />\n      </Switch>\n    // </Security>\n  );\n};\nexport default AppWithRouterAccess;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AppWithRouterAccess from \"./AppWithRouterAccess\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <Router>\n    <AppWithRouterAccess />\n  </Router>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}