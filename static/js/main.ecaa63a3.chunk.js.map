{"version":3,"sources":["components/ErrorBoundary.jsx","components/Home.jsx","components/OktaSignInWidget.jsx","components/Login.jsx","components/Protected.jsx","config.js","AppWithRouterAccess.jsx","App.js","index.js"],"names":["ErrorBoundary","props","state","hasError","error","info","this","setState","console","children","React","Component","Home","history","useHistory","useOktaAuth","oktaAuth","authState","isPending","login","a","push","logout","signOut","button","isAuthenticated","onClick","to","OktaSignInWidget","config","onSuccess","onError","widgetRef","useRef","useEffect","current","widget","OktaSignIn","showSignInToGetTokens","el","then","catch","remove","ref","Login","pathname","tokens","handleLoginRedirect","err","log","Protected","oktaAuthConfig","issuer","clientId","redirectUri","window","location","origin","oktaSignInConfig","baseUrl","authParams","OktaAuth","AppWithRouterAccess","useLocation","restoreOriginalUri","_oktaAuth","originalUri","replace","toRelativeUrl","onAuthRequired","path","component","render","LoginCallback","App","ReactDOM","document","getElementById"],"mappings":"kPAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,qDAKnB,SAAkBC,EAAOC,GAEvBC,KAAKC,SAAS,CAAEJ,UAAU,IAE1BK,QAAQJ,MAAMA,EAAOC,K,oBAGvB,WACE,OAAIC,KAAKJ,MAAMC,SAEN,uDAEFG,KAAKL,MAAMQ,a,GAlBqBC,IAAMC,W,qDC+BlCC,EA5BF,WACX,IAAMC,EAAUC,cADC,EAEeC,cAAxBC,EAFS,EAETA,SAAUC,EAFD,EAECA,UAIlB,GAAIA,EAAUC,UAAW,OAAO,sDAEhC,IAAMC,EAAK,uCAAG,sBAAAC,EAAA,+EAAYP,EAAQQ,KAAK,WAAzB,2CAAH,qDAELC,EAAM,uCAAG,sBAAAF,EAAA,+EAAYJ,EAASO,WAArB,2CAAH,qDAENC,EAASP,EAAUQ,gBACvB,wBAAQC,QAASJ,EAAjB,oBAEA,wBAAQI,QAASP,EAAjB,mBAGF,OACE,gCACE,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,uBACCH,M,iBCNQI,G,MAnBU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACvCC,EAAYC,mBAgBlB,OAfAC,qBAAU,WACR,IAAKF,EAAUG,QAAS,OAAO,EAE/B,IAAMC,EAAS,IAAIC,IAAWR,GAS9B,OAPAO,EACGE,sBAAsB,CACrBC,GAAIP,EAAUG,UAEfK,KAAKV,GACLW,MAAMV,GAEF,kBAAMK,EAAOM,YACnB,CAACb,EAAQC,EAAWC,IAEhB,qBAAKY,IAAKX,MCIJY,EApBD,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAAa,EACId,cAAxBC,EADoB,EACpBA,SAAUC,EADU,EACVA,UAUlB,OAAIA,EAAUC,UAAkB,KAEzBD,EAAUQ,gBACf,cAAC,IAAD,CAAUE,GAAI,CAAEkB,SAAU,OAC1B,cAAC,EAAD,CACEhB,OAAQA,EACRC,UAdc,SAACgB,GACjB9B,EAAS+B,oBAAoBD,IAc3Bf,QAXY,SAACiB,GACfxC,QAAQyC,IAAI,mBAAoBD,OCVrBE,EADG,kBAAM,4CCFlBC,EAAiB,CAIrBC,OAAQ,+CACRC,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,mBAGlCC,EAAmB,CACvBC,QAAS,gCACTN,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,kBACtCG,WAAY,ICJR5C,EAAW,IAAI6C,WAASV,GAoCfW,EAlCa,WAC1B,IAAMjD,EAAUC,cACV0C,EAAWO,cAMXC,EAAkB,uCAAG,WAAOC,EAAWC,GAAlB,SAAA9C,EAAA,sDACzBP,EAAQsD,QAAQC,wBAAcF,EAAaV,EAASC,SAD3B,2CAAH,wDAIxB,OACE,qCACE,gEACA,eAAC,IAAD,CACEzC,SAAUA,EACVqD,eAboB,WACxBxD,EAAQQ,KAAK,WAaT2C,mBAAoBA,EAHtB,UAKE,kEACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAW3D,IAC3B,cAAC,IAAD,CAAa0D,KAAK,aAAaC,UAAWrB,IAC1C,cAAC,IAAD,CACEoB,KAAK,SACLE,OAAQ,kBAAM,cAAC,EAAD,CAAO3C,OAAQ6B,OAE/B,cAAC,IAAD,CAAOY,KAAK,kBAAkBC,UAAWE,gBCxBpCC,G,MATH,kBACV,qCACE,2CACA,eAAC,IAAD,WACE,qDACA,cAAC,EAAD,YCLNC,IAASH,OACP,eAAC,EAAD,WACE,qDACA,cAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.ecaa63a3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    console.error(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useOktaAuth } from \"@okta/okta-react\";\n\nconst Home = () => {\n  const history = useHistory();\n  const { oktaAuth, authState } = useOktaAuth();\n\n  // if (authState.isPending) return null;\n\n  if (authState.isPending) return <div>authState.isPending</div>;\n\n  const login = async () => history.push(\"/login\");\n\n  const logout = async () => oktaAuth.signOut();\n\n  const button = authState.isAuthenticated ? (\n    <button onClick={logout}>Logout</button>\n  ) : (\n    <button onClick={login}>Login</button>\n  );\n\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <br />\n      <Link to=\"/protected\">Protected</Link>\n      <br />\n      {button}\n    </div>\n  );\n};\nexport default Home;\n","import React, { useEffect, useRef } from \"react\";\nimport OktaSignIn from \"@okta/okta-signin-widget\";\nimport \"@okta/okta-signin-widget/dist/css/okta-sign-in.min.css\";\n\nconst OktaSignInWidget = ({ config, onSuccess, onError }) => {\n  const widgetRef = useRef();\n  useEffect(() => {\n    if (!widgetRef.current) return false;\n\n    const widget = new OktaSignIn(config);\n\n    widget\n      .showSignInToGetTokens({\n        el: widgetRef.current,\n      })\n      .then(onSuccess)\n      .catch(onError);\n\n    return () => widget.remove();\n  }, [config, onSuccess, onError]);\n\n  return <div ref={widgetRef} />;\n};\nexport default OktaSignInWidget;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport OktaSignInWidget from './OktaSignInWidget';\nimport { useOktaAuth } from '@okta/okta-react';\n\nconst Login = ({ config }) => {\n  const { oktaAuth, authState } = useOktaAuth();\n\n  const onSuccess = (tokens) => {\n    oktaAuth.handleLoginRedirect(tokens);\n  };\n\n  const onError = (err) => {\n    console.log('error logging in', err);\n  };\n\n  if (authState.isPending) return null;\n\n  return authState.isAuthenticated ?\n    <Redirect to={{ pathname: '/' }}/> :\n    <OktaSignInWidget\n      config={config}\n      onSuccess={onSuccess}\n      onError={onError}/>;\n};\nexport default Login;","import React from \"react\";\n\nconst Protected = () => <h3>Protected</h3>;\nexport default Protected;\n","const oktaAuthConfig = {\n  // Note: If your app is configured to use the Implicit flow\n  // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\n  // you will need to add `pkce: false`\n  issuer: \"https://dev-46947239.okta.com/oauth2/default\",\n  clientId: \"0oag6szs6zMWTYitD5d6\",\n  redirectUri: window.location.origin + \"/login/callback\",\n};\n\nconst oktaSignInConfig = {\n  baseUrl: \"https://dev-46947239.okta.com\",\n  clientId: \"0oag6szs6zMWTYitD5d6\",\n  redirectUri: window.location.origin + \"/login/callback\",\n  authParams: {\n    // If your app is configured to use the Implicit flow\n    // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\n    // you will need to uncomment the below line\n    // pkce: false\n  },\n};\n\nexport { oktaAuthConfig, oktaSignInConfig };\n","import React from \"react\";\nimport { Route, useHistory, useLocation, Switch } from \"react-router-dom\";\nimport { Security, SecureRoute, LoginCallback } from \"@okta/okta-react\";\nimport { OktaAuth, toRelativeUrl } from \"@okta/okta-auth-js\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Protected from \"./components/Protected\";\nimport { oktaAuthConfig, oktaSignInConfig } from \"./config\";\n\nconst oktaAuth = new OktaAuth(oktaAuthConfig);\n\nconst AppWithRouterAccess = () => {\n  const history = useHistory();\n  const location = useLocation();\n  debugger;\n  const customAuthHandler = () => {\n    history.push(\"/login\");\n  };\n\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\n    history.replace(toRelativeUrl(originalUri, location.origin));\n  };\n\n  return (\n    <>\n      <div>AppWithRouterAccess component</div>\n      <Security\n        oktaAuth={oktaAuth}\n        onAuthRequired={customAuthHandler}\n        restoreOriginalUri={restoreOriginalUri}\n      >\n        <div>AppWithRouterAccess in Security</div>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <SecureRoute path=\"/protected\" component={Protected} />\n          <Route\n            path=\"/login\"\n            render={() => <Login config={oktaSignInConfig} />}\n          />\n          <Route path=\"/login/callback\" component={LoginCallback} />\n        </Switch>\n      </Security>\n    </>\n  );\n};\nexport default AppWithRouterAccess;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AppWithRouterAccess from \"./AppWithRouterAccess\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <>\n    <div>App comp</div>\n    <Router>\n      <div>App comp in router</div>\n      <AppWithRouterAccess />\n    </Router>\n  </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ErrorBoundary from './components/ErrorBoundary'\nimport App from './App';\n\nReactDOM.render(\n  <ErrorBoundary>\n    <div>ErrorBoundary comp</div>\n    <App />\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}